[{"/Users/fany/Desktop/weather/src/reportWebVitals.js":"1","/Users/fany/Desktop/weather/src/App.js":"2","/Users/fany/Desktop/weather/src/index.js":"3","/Users/fany/Desktop/weather/src/components/Weather.jsx":"4","/Users/fany/Desktop/weather/src/redux/reducers/index.js":"5","/Users/fany/Desktop/weather/src/components/LocationDialog.jsx":"6"},{"size":362,"mtime":1611319384028,"results":"7","hashOfConfig":"8"},{"size":413,"mtime":1612347219650,"results":"9","hashOfConfig":"8"},{"size":457,"mtime":1612349160473,"results":"10","hashOfConfig":"8"},{"size":4764,"mtime":1612349822695,"results":"11","hashOfConfig":"8"},{"size":466,"mtime":1612348908298,"results":"12","hashOfConfig":"8"},{"size":1913,"mtime":1612349501572,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"120k1rp",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fany/Desktop/weather/src/reportWebVitals.js",[],"/Users/fany/Desktop/weather/src/App.js",[],["28","29"],"/Users/fany/Desktop/weather/src/index.js",[],"/Users/fany/Desktop/weather/src/components/Weather.jsx",["30"],"import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport LocationDialog from './LocationDialog';\nimport { ReactComponent as Sun } from '../images/sun.svg';\nimport { setDialogOpen } from '../redux/action';\n\nconst styles = () => ({\n\tpaper: {\n\t\tbackgroundColor: '#ededed',\n\t\theight: '100%',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tcontainer: {\n\t\tposition: 'relative',\n\t\tminWidth: '360px',\n\t\tboxShadow: '0 1px 3px 0 #999999',\n\t\tboxSizing: 'border-box',\n\t\tpadding: '20px 15px',\n\t\tbackgroundColor: '#C4E1FF'\n\t},\n\tweatherSvg: {\n\t\twidth: '150px',\n\t\theight: 'auto',\n\t\tmargin: '40px 27% 50px 27%'\n\t},\n\tweatherInformation: {\n\t\tpadding: '10px 15px 10px 15px',\n\t\tmargin: '10px 0 0 0'\n\t},\n\tsvg: {\n\t\twidth: '25px',\n\t\theight: 'auto'\n\t}\n});\n\nconst useStyles = makeStyles(styles);\n\nconst mapStateToProps = (state) => {\n\tconsole.log(state); return ({\n\t\tcity: state.weatherLocation.city,\n\t\tplace: state.weatherLocation.place,\n\t})\n}\n\nconst Weather = ({ city, place }) => {\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles();\n\tconst date = new Date().getDay();\n\tconst dayList = ['日', '一', '二', '三', '四', '五', '六'];\n\tconst AuthorizationKey = 'CWB-330FC854-CB5C-4364-AE2C-600F34DCF8AE'\n\tconst weatherUrl = `/v1/rest/datastore/O-A0003-001?Authorization=${AuthorizationKey}&locationName=${place}`\n\tconst weather36hUrl = `/v1/rest/datastore/F-C0032-001?Authorization=${AuthorizationKey}&locationName=${city}`\n\tconst [weatherStatus, setWeatherStatus] = useState({})\n\n\tconst fetchData = useCallback(() => {\n\t\tconst fetchingData = async () => {\n\t\t\tconst [realTimeData, weather36hData] = await Promise.all([\n\t\t\t\tfetachGetRealtimeWeather(),\n\t\t\t\tfetchGetWeather36h(),\n\t\t\t]);\n\n\t\t\tsetWeatherStatus({\n\t\t\t\t...realTimeData,\n\t\t\t\t...weather36hData\n\t\t\t})\n\t\t};\n\n\t\tfetchingData();\n\t}, []);\n\n\tReact.useEffect(() => {\n\t\tfetchData();\n\t}, [fetchData]);\n\n\tconst fetachGetRealtimeWeather = () => {\n\t\treturn axios.get(weatherUrl)\n\t\t\t.then(res => {\n\t\t\t\tconst data = res.data.records.location[0];\n\t\t\t\tconst weatherElements = data.weatherElement.reduce(\n\t\t\t\t\t(neededElements, item) => {\n\t\t\t\t\t\tif (['WDSD', 'TEMP', 'HUMD'].includes(item.elementName)) {\n\t\t\t\t\t\t\tneededElements[item.elementName] = item.elementValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn neededElements;\n\t\t\t\t\t},\n\t\t\t\t\t{}\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tlocation: data.locationName,\n\t\t\t\t\ttime: data.time.obsTime,\n\t\t\t\t\twind: weatherElements.WDSD,\n\t\t\t\t\ttemp: weatherElements.TEMP,\n\t\t\t\t\thumid: weatherElements.HUMD,\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n\tconst fetchGetWeather36h = () => {\n\t\treturn axios.get(weather36hUrl)\n\t\t\t.then((res) => {\n\t\t\t\tconst locationData = res.data.records.location[0];\n\t\t\t\tconst weatherElements = locationData.weatherElement.map(el => el.time[0].parameter);\n\t\t\t\treturn {\n\t\t\t\t\tdescription: weatherElements[0].parameterName,\n\t\t\t\t\tweatherCode: weatherElements[0].parameterValue,\n\t\t\t\t\trainPossibility: weatherElements[1].parameterName,\n\t\t\t\t\tcomfortability: weatherElements[3].parameterName,\n\t\t\t\t\tmaxTemp: weatherElements[4].parameterName,\n\t\t\t\t\tminTemp: weatherElements[2].parameterName,\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tconst handleOpenDialog = () => {\n\t\tdispatch(setDialogOpen(true))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<LocationDialog />\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t<Box className={classes.container} >\n\t\t\t\t\t<Button fullWidth onClick={handleOpenDialog}>\n\t\t\t\t\t\t<Typography align='center' variant='h6' >{weatherStatus.location}</Typography>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Sun className={classes.weatherSvg} />\n\t\t\t\t\t<Paper className={classes.weatherInformation}>\n\t\t\t\t\t\t<Box pb={3}>\n\t\t\t\t\t\t\t<Typography variant='body1'>星期{dayList[date]}</Typography>\n\t\t\t\t\t\t\t<Typography variant='body1'>{`${weatherStatus.description}、${weatherStatus.comfortability}`}</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box pb={3}>\n\t\t\t\t\t\t\t<Typography align='center' variant='h3'>{Math.round(weatherStatus.temp)}℃</Typography>\n\t\t\t\t\t\t\t<Typography align='center' variant='body2'>{weatherStatus.minTemp}℃~{weatherStatus.maxTemp}℃</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Typography align='right' variant='body2'>風速： {weatherStatus.wind} m/h</Typography>\n\t\t\t\t\t\t<Typography align='right' variant='body2'>濕度：{Math.round(weatherStatus.humid * 100)} %</Typography>\n\t\t\t\t\t\t<Typography align='right' variant='body2'>降雨機率：{weatherStatus.rainPossibility} %</Typography>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Box>\n\t\t\t</Paper>\n\t\t</>\n\t)\n};\n\n\nexport default connect(\n\tmapStateToProps\n)(Weather);","/Users/fany/Desktop/weather/src/redux/reducers/index.js",[],"/Users/fany/Desktop/weather/src/components/LocationDialog.jsx",["31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":79,"column":5,"nodeType":"40","endLine":79,"endColumn":7,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":10,"nodeType":"44","messageId":"45","endLine":4,"endColumn":20},{"ruleId":"42","severity":1,"message":"46","line":10,"column":8,"nodeType":"44","messageId":"45","endLine":10,"endColumn":18},{"ruleId":"42","severity":1,"message":"47","line":13,"column":8,"nodeType":"44","messageId":"45","endLine":13,"endColumn":19},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'fetachGetRealtimeWeather' and 'fetchGetWeather36h'. Either include them or remove the dependency array.","ArrayExpression",["50"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [fetachGetRealtimeWeather, fetchGetWeather36h]",{"range":"53","text":"54"},[2145,2147],"[fetachGetRealtimeWeather, fetchGetWeather36h]"]